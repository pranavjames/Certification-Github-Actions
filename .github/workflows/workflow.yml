on:

  repository_dispatch: 
    types: [my_event]

#  schedule:
#    - cron: '*/10 * * * *'


  push:
    paths:
      - '**/*.js'
      - 'sub-project/**'
      - '!sub-project/docs/**'
    
    branches:
      - main    
      
 # you may only define one of branches and branches-ignore for a single event  same applies for tags
 
 #   branches-ignore:
 #     - 'mona/octocat'
 #     - 'releases/**-alpha'
 
 #   tags-ignore:
 #     - 'v2'
 #     - 'v1.*'
 
 #   paths-ignore:
 #     - 'docs/**'

  pull_request:
    branches:
      - main

  workflow_dispatch:
    inputs:
      input1:
        description: 'Description of the input1'
        required: false
        type: 'string'
        default: 'default-value for input1'
        
      input2:
        description: Description of the input2
        required: false
        type: boolean
        default: 'true' 
      # or default: true => works
      
      input3:
        description: Description of the input3
        required: false
        type: choice
        options: 
          - choice1
          - choice2
          - choice3
          
        default: choice2
            

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      output_from_build_job: ${{ steps.output_step.outputs.output1 }}
  
    env:
      MY_CUSTOM_ENV_VAR: 'This is a custom environment variable'
    
    
    steps:
    
    - name: Printing input variables
      run: |
       echo "Print input1 ${{ github.event.inputs.input1 }}"
       echo "Print input2 ${{ github.event.inputs.input2 }}"
       echo "Print input2 ${{ github.event.inputs.input3 }}"
    
    - name: Printing the webhook event
      run: |
        echo "Print the webhook"
        echo "Received event type: ${{ github.event.action }}"
        echo "Custom Payload: ${{ github.event.client_payload.key1 }}"
        
    - name: Set Environment Variable
      run: |
        echo "MY_VAR=Hello World" >> $GITHUB_ENV
        echo "YOUR_VAR=Bye World" >> $GITHUB_ENV
      
    - name: Use Environment Variable
      run: echo $MY_VAR $YOUR_VAR  # This will output "Hello World" Bye World
    
    - name: Giving output
      id: output_step
      run: |
        echo "output1=my_output_from_step" >> $GITHUB_OUTPUT    # remember to set $GITHUB_OUTPUT to send output
        
    - name: Checkout code
      uses: actions/checkout@v3
      


#    - name: Set up JDK 17
#      uses: actions/setup-java@v3
#      with:
#        java-version: '17'
#        distribution: 'temurin'
#
#    - name: Cache Maven dependencies
#      uses: actions/cache@v3
#      with:
#        path: ~/.m2/repository
#        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
#        restore-keys: |
#          ${{ runner.os }}-maven-
#
#    - name: Build with Maven
#      run: mvn clean install
#
#    - name: Run Tests
#      run: mvn test


  example_job:
    runs-on: ubuntu-latest
    needs: build

    # Define environment variables at the job level
    env:
      CUSTOM_ENV_VAR: 'This is a custom environment variable'
      OUTPUT_FROM_ABOVE_JOB: ${{ needs.build.outputs.output_from_build_job }}

    steps:
     
      # 1. Access output from build job
      - name: Accessing output from build job
        run: |
          echo $OUTPUT_FROM_ABOVE_JOB
          
         
     
     
      # 2. Display some default environment variables
      - name: Display default environment variables
        run: |
          echo "Repository: $GITHUB_REPOSITORY"
          echo "Commit SHA: $GITHUB_SHA"
          echo "Workflow: $GITHUB_WORKFLOW"
          echo "Run ID: $GITHUB_RUN_ID"
          echo "Actor: $GITHUB_ACTOR"

      # 3. Use custom environment variables in a script
      - name: Use custom environment variable
        run: |
          echo "Custom env variable: $CUSTOM_ENV_VAR"

      # 4. Set a custom environment variable dynamically during the workflow
      - name: Set environment variable using workflow commands
        run: |
          echo "Setting custom environment variable via workflow commands"
          echo "MY_DYNAMIC_ENV_VAR=Hello, World!" >> $GITHUB_ENV

      # 5. Use encrypted secrets securely (e.g., a secret called MY_SECRET_KEY)
      - name: Use encrypted secret
        run: |
          echo "Using encrypted secret: ${{ secrets.MY_SECRET_KEY }}"
          
      # 6. Use the GITHUB_TOKEN for authentication (e.g., for a GitHub API request)
      - name: Use GITHUB_TOKEN for authentication
        run: |
          curl -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
               -H "Accept: application/vnd.github.v3+json" \
               https://api.github.com/user

      # 7. Demonstrate how to use the dynamically set environment variable
      - name: Use dynamically set environment variable
        run: |
          echo "Dynamically set variable MY_DYNAMIC_ENV_VAR: $MY_DYNAMIC_ENV_VAR"


